<Window x:Class="PredictorMVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PredictorMVVM"
        xmlns:VM="clr-namespace:PredictorMVVM.ViewModel"
        mc:Ignorable="d"
        Height="500"
        Width="500"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        WindowStartupLocation="CenterOwner"
        MouseDown="Window_MouseDown">
    <Window.DataContext>
        <VM:MainWindowVM />
    </Window.DataContext>
    <Window.Resources>
        <Storyboard x:Key="ShowPredictionSB">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0.0"
                             To="1.0"
                             Duration="0:0:6">
            </DoubleAnimation>
        </Storyboard>
        <!--Мне просто не нужно было подсвечивание кнопки при нажатии-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.Static.Border"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.MouseOver.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.MouseOver.Border"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.Pressed.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.Pressed.Border"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Border"
                         Color="Transparent" />
        <SolidColorBrush x:Key="Button.Disabled.Foreground"
                         Color="Transparent" />
        <!--Мне просто не нужно было подсвечивание кнопки при нажатии-->
        <Style x:Key="MyButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource Button.Static.Background}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource Button.Static.Border}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Image x:Name="PredictionImage"
               Source="/Images/Magic8.png"
               Width="500"
               Height="500">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Cursor"
                                    Value="Hand" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Image.Style>
        </Image>
        <Button Width="64"
                Height="64"
                HorizontalAlignment="Right"
                Margin="0 0 10 0"
                VerticalAlignment="Top"
                Background="Transparent"
                Command="{Binding CloseApp}"
                BorderBrush="Transparent"
                BorderThickness="0"
                Style="{DynamicResource MyButtonStyle}">
            <Image Source="/Images/Close.png" />
        </Button>
        <Grid>
            <Polygon x:Name="TrianglePolygon"
                     Points="138,180 358,180 245, 380"
                     Opacity="1">
                <Polygon.Fill>
                    <RadialGradientBrush RadiusX="1"
                                         RadiusY="1"
                                         GradientOrigin="0,0">
                        <GradientStop Color="Black"
                                      Offset="1" />
                        <GradientStop Color="#FF060678"
                                      Offset="0" />
                    </RadialGradientBrush>
                </Polygon.Fill>
            </Polygon>
            <TextBlock Foreground="White"
                       FontSize="14"
                       FontFamily="Verdana"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       TextWrapping="Wrap"
                       MaxHeight="200"
                       MaxWidth="200"
                       Margin="155,190,160,162"
                       Height="148"
                       Width="185"
                       TextAlignment="Center"
                       x:Name="tbPrediction"
                       Opacity="{Binding OpacityTB}"
                       Text="{Binding Prediction}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <EventTrigger RoutedEvent="MouseUp">
                                <BeginStoryboard Storyboard="{StaticResource ShowPredictionSB}" />
                            </EventTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                <TextBlock.InputBindings>
                    <MouseBinding Command="{Binding ButtonClick}"
                                  MouseAction="LeftClick" />
                </TextBlock.InputBindings>
            </TextBlock>
        </Grid>
        <!--<Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <ProgressBar x:Name="pbPrediction"
                     Value="{Binding ProgressBarValue}"
                     Margin="10 20 10 10"
                     Width="300"
                     Height="40" 
                     Maximum="105"/>
        <TextBlock VerticalAlignment="Center"
                   HorizontalAlignment="Center"
                   MaxHeight="35"
                   Margin="10 20 10 10"
                   FontFamily="Verdana"
                   FontSize="14"
                   TextWrapping="Wrap"
                   Text="{Binding TextBlockValue}">
        </TextBlock>

        <Button Content="Узнать ответ"
                FontFamily="Verdana"
                FontSize="18"           
                Command="{Binding ButtonClick}"
                Margin="10 20 10 10"
                Width="300"
                Height="40" 
                x:Name="bPredict"
                Grid.Row="1"
                IsEnabled="{Binding IsEnable}"/>-->
    </Grid>
</Window>
